// Generated by CoffeeScript 1.3.1
(function() {

  this.FacebookInterface = (function() {

    FacebookInterface.name = 'FacebookInterface';

    FacebookInterface.prototype.enabled = false;

    FacebookInterface.prototype.userId = null;

    FacebookInterface.prototype.accessToken = null;

    FacebookInterface.prototype.loginCallback = null;

    function FacebookInterface(appId, channelUrl) {
      FB.init({
        appId: appId,
        channelUrl: channelUrl,
        status: true,
        cookie: true,
        xfbml: true,
        oauth: true
      });
      this.enabled = true;
    }

    FacebookInterface.prototype.OAuthVars = function(authResponse) {
      if (authResponse) {
        this.userId = authResponse.userID;
        this.accessToken = authResponse.accessToken;
      }
      return {
        userId: this.userId,
        accessToken: this.accessToken
      };
    };

    FacebookInterface.prototype.login = function(scope, callback) {
      var statusCheck,
        _this = this;
      statusCheck = false;
      if (callback === null || callback === undefined) callback = this.loginCallback;
      return FB.getLoginStatus(function(response) {
        statusCheck = true;
        if (response.authResponse != null) {
          callback(response);
          return _this.OAuthVars(response.authResponse);
        } else {
          return FB.login(function(response) {
            if (response.authResponse != null) {
              callback(response);
              return _this.OAuthVars(response.authResponse);
            }else{
              callback(response);
            }
          }, {
            scope: scope
          });
        }
      });
    };

    return FacebookInterface;

  })();

}).call(this);
